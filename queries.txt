//queries

-Alex: query to select all food items currently in the db ordered alphabetically

$query = 'SELECT * FROM food_item
		  ORDER BY item_desc';
$statement = $db->prepare($query);
$statement->execute();
$items = $statement->fetchAll();
$statement->closeCursor();

-Alex: query to select all food items that are close to expiration (maybe like 3 days or something) ordered alphabetically
$query = 'SELECT * FROM food_item
		  ORDER BY item_desc';
		  where expirationdatesetvariable>DATEADD(day,-3, GETDATE())
$statement = $db->prepare($query);
$statement->execute();
$statement->closeCursor();


-Alex: query to select all food items that are new uploads ordered alphabetically
$query = 'SELECT * FROM food_item
		  ORDER BY dateaddedvariable, item_desc';
		  where dateaddedvariable<DATEADD(day,+1, GETDATE())
$statement = $db->prepare($query);
$statement->execute();
$statement->closeCursor();

-Alex: query to select all food items by food category (dairy, bakery items, condiments, etc.) ordered alphabetically, this may need to be an additional field added to the food_item table

-Alex: query to insert new user, new business, and new user_to_business entry

-Alex: query to update password for a given user (for the password reset page)

$queryUpdate = 'UPDATE users
				SET u_password = :password
				WHERE u_id = :u_id';
$statement = $db->prepare($queryUpdate);
$statement->bindValue(':u_id', $u_id);
$statement->bindValue(':password', $password);
$statement->execute();
$statement->closeCursor();

-Alex: query(ies) to take the current cart and create a transaction (with transaction lines) for every item in the cart

-Alex: query to select all business names and ID's ordered alphabetically

$query = 'SELECT * FROM businesses
		  ORDER BY business_name';
$statement = $db->prepare($query);
$statement->execute();
$businesses = $statement->fetchAll();
$statement->closeCursor();

-Alex: query to pull access logs by business ID (or business name)

$query = 'SELECT * FROM access_log, business, user_to_business WHERE
		  access_log.u_id = user_to_business.u_id
		  AND
		  business.business_id = user_to_business.business_id;';
$statement = $db->prepare($query);
$statement->execute();
$statement->closeCursor();

-Alex: query to update user if they agree to the terms and conditions

$queryUpdate = 'UPDATE users
				SET u_fname = :fname, u_lname = :lname, u_mi = :mi, 
				u_username = :username, u_password = :password, u_phone = :phone,
				u_email = :email, u_photo = :photo, u_is_admin = :admin, u_is_standard = :standard,
				WHERE u_id = :u_id';
$statement = $db ->prepare($queryUpdate);
$statement->bindValue(':fname', $fname);
$statement->bindValue(':lname', $lname);
$statement->bindValue(':mi', $mi);
$statement->bindValue(':username', $username);
$statement->bindValue(':password', $password);
$statement->bindValue(':phone', $phone);
$statement->bindValue(':email', $email);
$statement->bindValue(':photo', $photo);
$statement->bindValue(':admin', $admin);
$statement->bindValue(':standard', $standard);
$statement->execute();
$statement->closeCursor();


//query to display username, photo, name (Adrian)
***we are not going to be able to get and display a location because that's not part of the database, unless you mean the business location
$query = 'SELECT u_photo, u_username, u_fname, u_lname FROM users
		  WHERE u_id = :u_id';
$statement = $db->prepare($query);
$statement->execute();
$u_info = $statement->fetch();
$statement->closeCursor();

-Adrian: Insert statement for food items to food_items table (database insertion)

-Adrian: Select statement for users and businesses so I can populate food items on pages

-Adrian: Delete statement to delete food_items from the database
